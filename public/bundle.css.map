{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/components/List.svelte",
    "../src/components/Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Modal from \"./Modal.svelte\";\n\n  let customers = [\n    {\n      id: 1,\n      name: \"Mark\",\n      email: \"Otto@markotto.com\",\n      phone: \"+231323232321\"\n    }\n  ];\n  let selectedCustomer = { id: \"\", name: \"\", email: \"\", phone: \"\" };\n\n  let showModal;\n  let isValid = false;\n\n  $: if (\n    selectedCustomer.name &&\n    selectedCustomer.email &&\n    selectedCustomer.phone\n  ) {\n    isValid = true;\n  } else {\n    isValid = false;\n  }\n\n  function onClickAdd() {\n    selectedCustomer = { name: \"\", email: \"\", phone: \"\" };\n    showModal = true;\n  }\n\n  function onClickEdit(row) {\n    selectedCustomer = row;\n    showModal = true;\n  }\n\n  function save() {\n    if (!isValid) {\n      return;\n    }\n\n    if (!selectedCustomer.id) {\n      customers = [\n        ...customers,\n        { ...selectedCustomer, id: customers[customers.length - 1].id + 1 }\n      ];\n    } else {\n      const index = customers.findIndex(\n        customer => customer.id === selectedCustomer.id\n      );\n      customers[index] = selectedCustomer;\n    }\n\n    showModal = false;\n  }\n\n  function remove(index) {\n    customers = [...customers.slice(0, index), ...customers.slice(index + 1)];\n  }\n</script>\n\n<style>\n  :global(.text-center) {\n    text-align: center;\n  }\n</style>\n\n<table class=\"table\">\n\t<thead class=\"thead-dark\">\n\t\t<tr>\n\t\t\t<th scope=\"col\">#</th>\n\t\t\t<th scope=\"col\">Name</th>\n\t\t\t<th scope=\"col\">Email</th>\n\t\t\t<th scope=\"col\">Phone</th>\n\t\t\t<th scope=\"col\" class=\"text-center\">\n\t\t\t\t<img src=\"https://img.icons8.com/color/26/000000/plus.png\" alt=\"add-customer\" on:click={onClickAdd}>\n\t\t\t</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n    {#each customers as {id, name, email, phone}, i (id)}\n\t\t<tr>\n\t\t\t<th scope=\"row\">{id}</th>\n\t\t\t<td>{name}</td>\n\t\t\t<td>{email}</td>\n\t\t\t<td>{phone}</td>\n\t\t\t<td class=\"text-center\">\n\t\t\t\t<button class=\"btn btn-sm btn-primary\" on:click=\"{() => onClickEdit({id, name, email, phone})}\">Edit</button> \n\t\t\t\t<button class=\"ml-1 btn btn-sm btn-danger\" on:click=\"{() => remove(i)}\">Remove</button>\n\t\t\t</td>\n\t\t</tr>\n\t{/each}\n\t</tbody>\n</table>\n\n  <Modal bind:visible={showModal} size={'md'} center=\"{true}\">\n\t<h3 slot=\"header\">Modal Header</h3>\n\t\t<div class=\"form-group\">\n\t\t\t<input type=\"text\" class=\"form-control\" class:is-invalid=\"{!selectedCustomer.name}\" placeholder=\"Name\" bind:value=\"{selectedCustomer.name}\" required>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<input type=\"email\" class=\"form-control\" class:is-invalid=\"{!selectedCustomer.email}\" placeholder=\"Email address\"  bind:value=\"{selectedCustomer.email}\" required>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<input type=\"text\" class=\"form-control\" class:is-invalid=\"{!selectedCustomer.phone}\" placeholder=\"Phone\"  bind:value=\"{selectedCustomer.phone}\" required>\n\t\t</div>\n\t\t<div slot=\"footer\">  \n\t\t\t<button type=\"submit\" class=\"btn btn-secondary btn-sm\" on:click=\"{() => (showModal = false)}\">Cancel</button>\n\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-sm\" disabled=\"{!isValid}\" on:click=\"{save}\">Submit</button>\n\t\t</div>\n  </Modal>\n",
    "<script>\n\timport { onDestroy } from \"svelte\";\n\timport { fade } from \"svelte/transition\";\n\timport { fromEvent, Subject } from \"rxjs\";\n\timport { filter, takeUntil } from \"rxjs/operators\";\n\n\texport let visible;\n\texport let center = false;\n\texport const size = \"md\";\n\texport const destroy$ = new Subject();\n\n\tlet timeout;\n\n\tfunction close() {\n\t  timeout = setTimeout(() => (visible = false), 300);\n\t}\n\n\tfunction clear() {\n\t  setTimeout(() => clearTimeout(timeout), 100);\n\t}\n\n\tonDestroy(() => {\n\t  destroy$.next();\n\t  destroy$.complete();\n\t});\n\n\tfromEvent(document, \"keyup\")\n\t  .pipe(\n\t    filter(({ keyCode }) => keyCode === 27),\n\t    takeUntil(destroy$)\n\t  )\n\t  .subscribe(() => (visible = false));\n</script>\n\n<style>\n\t.modal {\n\t  background-color: rgba(0, 0, 0, 0.4);\n\t}\n</style>\n\n{#if visible}\n<div class=\"modal d-block\" class:show=\"{visible}\" tabindex=\"-1\" role=\"dialog\" on:click={close}>\n\t<div class=\"modal-dialog modal-{size}\" class:modal-dialog-centered=\"{center}\">\n\t\t<div class=\"modal-content\" on:click={clear} transition:fade>\n\t\t\t<div class=\"modal-header\">\t\n\t\t\t\t<slot name=\"header\"></slot>\n\t\t\t\t<button type=\"button\" class=\"close\" on:click={() => visible = false}>\n\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class=\"modal-body\">\n\t\t\t\t<slot></slot>\n\t\t\t</div>\n\t\t\t<div class=\"modal-footer\">\n\t\t\t<slot name=\"footer\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" on:click={close}>Close</button>\n\t\t\t</slot>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n{/if}"
  ],
  "names": [],
  "mappings": "AA8DU,YAAY,AAAE,CAAC,AACrB,UAAU,CAAE,MAAM,AACpB,CAAC;AC7BF,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC"
}